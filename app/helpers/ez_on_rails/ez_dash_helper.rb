# frozen_string_literal: true

# Helper module for Dashboards generated by the EzOnRails::EzDash generator.
module EzOnRails::EzDashHelper
  # Returns the dash_info given from the controller.
  # Since the rails helpers cannot read the locals data, the tiles local must be given as parameter.
  def get_dash_info(dash_info)
    return dash_info if dash_info

    []
  end

  # Returns the borderless value given from the controller.
  # Default value will be false, if the instance value is also undefined.
  # Since the rails helpers cannot read the locals data, the borderless local must be given as parameter.
  def get_borderless(borderless)
    return borderless if borderless

    false
  end

  # Removes the tiles from the given dash_info which are not accessible by
  # the current user.
  def filter_unaccessible_tiles!(dash_info)
    dash_info.each do |category|
      category[:tiles].delete_if do |tile|
        # delete if the link is not external and the current user has no access to the link
        tile[:controller] && tile[:action] && (!access_to_action_in_path? tile[:controller], tile[:action])
      end
    end
  end

  # Returns the link of the tile, if given.
  # If no link is specified, the link will be build from the controller and action information
  # of the tile.
  # If this is also not specified, nil will be returned.
  def tile_link(tile)
    return tile[:link] if tile.key? :link

    return url_for controller: tile[:controller], action: tile[:action] if tile.key?(:controller) && tile.key?(:action)

    nil
  end

  # Returns the text of the given tile.
  def tile_text(tile)
    tag.span tile[:text]
  end

  # Returns the image of the given tile.
  def tile_image(tile)
    image_tag tile[:image], class: 'card-img'
  end

  # Returns the icon of the given tile.
  def tile_icon(tile)
    ez_icon(tile[:icon], class: 'dashboard-tile-icon')
  end
end
